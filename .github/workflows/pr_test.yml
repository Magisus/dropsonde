name: "Acceptance Tests"

on: [pull_request]

env:
  HONEYCOMB_WRITEKEY: 7f3c63a70eecc61d635917de46bea4e6
  HONEYCOMB_DATASET: litmus tests

jobs:
  Spec:
    name: Acceptance Tests
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        ruby_version:
          - 2.7

    env:
      BUILDEVENT_FILE: '../buildevents.txt'
      RVM_GEM_VERSION: ${{ matrix.ruby_version }}

    steps:
      - run: |
          echo "SANITIZED_RUBY_VERSION=$(echo '${{ matrix.ruby_version }}' | sed 's/~> //g')" >> $GITHUB_ENV
      - run: |
          echo 'ruby_version=${{ env.SANITIZED_RUBY_VERSION }}' >> $BUILDEVENT_FILE
      - name: "Honeycomb: Start first step"
        run: |
          echo "STEP_ID=${{ env.SANITIZED_RUBY_VERSION }}-spec" >> $GITHUB_ENV
          echo STEP_START=$(date +%s) >> $GITHUB_ENV
      - name: "Honeycomb: Start recording"
        uses: puppetlabs/kvrhdn-gha-buildevents@pdk-templates-v1
        with:
          apikey: ${{ env.HONEYCOMB_WRITEKEY }}
          dataset: ${{ env.HONEYCOMB_DATASET }}
          job-status: ${{ job.status }}
          matrix-key: ${{ env.SANITIZED_RUBY_VERSION }}

      - name: Checkout Source
        uses: actions/checkout@v2

      - name: "Activate Ruby ${{ matrix.ruby_version }}"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
          bundler-cache: true

      - name: Print bundle environment
        run: |
          echo ::group::bundler environment
          buildevents cmd $TRACE_ID $STEP_ID 'bundle env' -- bundle env
          echo ::endgroup::
      - name: bundle install
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bundle install' -- bundle install

      - name: Spec prep
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bundle exec rake spec_prep' -- bundle exec rake spec_prep

      - name: Provision Postgres
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bolt plan run dropsonde::provision_postgres' -- bundle exec bolt plan run dropsonde::provision_postgres --modulepath ./spec/fixtures/modules/

      - name: Provision Puppet Server
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bolt plan run dropsonde::provision_puppetserver' -- bundle exec bolt plan run dropsonde::provision_puppetserver --modulepath ./spec/fixtures/modules/

      - name: Provision PuppetDB
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bolt plan run dropsonde::provision_puppetdb' -- bundle exec bolt plan run dropsonde::provision_puppetdb --modulepath ./spec/fixtures/modules/ --inventory ./spec/fixtures/litmus_inventory.yaml

      - name: Provision Agents
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bolt plan run dropsonde::provision_agents' -- bundle exec bolt plan run dropsonde::provision_agents --modulepath ./spec/fixtures/modules/

      - name: Install and Setup Puppet Agents
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bolt plan run dropsonde::agents_setup' -- bundle exec bolt plan run dropsonde::agents_setup --modulepath ./spec/fixtures/modules/ --inventory ./spec/fixtures/litmus_inventory.yaml
          echo ::group::=== INVENTORY ===
          if [[ -f 'spec/fixtures/litmus_inventory.yaml' ]]; then
            FILE='spec/fixtures/litmus_inventory.yaml'
          elif [[ -f 'inventory.yaml' ]]; then
            FILE='inventory.yaml'
          fi
          sed -e 's/password: .*/password: "[redacted]"/' < $FILE || true
          echo ::endgroup::

      - name: Config Puppet Infrastructure
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bolt plan run dropsonde::config_infra' -- bundle exec bolt plan run dropsonde::config_infra --modulepath ./spec/fixtures/modules/ --inventory ./spec/fixtures/litmus_inventory.yaml

      - name: Run Acceptance Tests
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bundle exec rake dropsonde:acceptance' -- bundle exec rake dropsonde:acceptance
      
      - name: Tear down
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'rake litmus:tear_down' -- bundle exec rake litmus:tear_down
